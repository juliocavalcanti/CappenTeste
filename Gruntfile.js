


module.exports = function (grunt) {
    'use strict';
    var LIVERELOAD_PORT = 35729;
    var lrSnippet = require('connect-livereload')({port: LIVERELOAD_PORT});
    var mountFolder = function (connect, dir) {
        return connect.static(require('path').resolve(dir));
    };

    // Project configuration
    grunt.initConfig({
        // Metadata
        pkg: grunt.file.readJSON('package.json'),
        banner: '/*! <%= pkg.name %> - v<%= pkg.version %> - \n' +
            '<%= grunt.template.today("yyyy-mm-dd") %>\n' +
            '<%= pkg.homepage ? "* " + pkg.homepage + "\\n" : "" %>' +
            '* Copyright (c) <%= grunt.template.today("yyyy") %> <%= pkg.author.name %>;' +
            '*/\n',
        bowerPath : "bower_components",
        modulesPath : "modules",
        jsDevPath : "js/dev",
        // Task configuration
        watch : {
            options: {
                nospawn: true,
                livereload: LIVERELOAD_PORT
            },
            css: {
                files: 'less/**/*.less',
                tasks: ['clean:css','less:dist','concat:css','cssmin'],
                options: {
                   livereload: LIVERELOAD_PORT
                }
            },
            js: {
                files: ['<%= jsDevPath %>/**/*.js'],
                tasks : ['clean:js','concat:js','uglify'],
                options: {
                   livereload: LIVERELOAD_PORT
                }
            },
            livereload: {
                options: {
                    livereload: LIVERELOAD_PORT
                },
                files: [
                    '*.html',
                    'images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}'
                ],
                tasks : ['imagemin'],
            }
        },
        less: {
            dist: {
                options: {
                    style: 'compressed',
                },
                files: {
                    'css/<%=pkg.name%>.css': 'less/<%=pkg.name%>.less'
                }
            }
        },
        concat: {
            options: {
                banner: '<%= banner %>',
                stripBanners: true
            },
            js: {
                src: [
                        '<%= bowerPath %>/jquery/dist/jquery.js',
                        '<%= bowerPath %>/jquery-ui/jquery-ui.min.js',
                        '<%= bowerPath %>/jquery-validation/jquery-validate.min.js',
                        '<%= bowerPath %>/jquery-selectboxit/src/javascripts/jquery.selectBoxIt.js',
                        '<%= bowerPath %>/picturefill/picturefill.min.js',
                        '<%= bowerPath %>/jquery.stellar/jquery.stellar.min.js',
                        '<%= bowerPath %>/FitText.js/jquery.fittext.js',
                        '<%= bowerPath %>/iscroll/build/iscroll.js',
                        '<%= bowerPath %>/jquery-waypoints/waypoints.min.js',
                        '<%= bowerPath %>/jquery-easing/jquery.easing.min.js',
                        '<%= bowerPath %>/owlcarousel/owl-carousel/owl.carousel.min.js', 
                        'js/dev/main.js'
                    ],
                dest: 'js/dev/<%= pkg.name %>.js'
            },
            css: {
                src: [
                        '<%= bowerPath %>/chosen/public/chosen.min.css',
                        '<%= bowerPath %>/jquery-selectboxit/src/stylesheets/jquery.selectBoxIt.css',
                        '<%= bowerPath %>/owlcarousel/owl-carousel/owl.carousel.css',
                        '<%= bowerPath %>/owlcarousel/owl-carousel/owl.theme.css',
                        'css/<%= pkg.name %>.css'
                    ],
                dest: 'css/<%= pkg.name %>.css'
            }
        },
        uglify: {
            options: {
                banner: '<%= banner %>'
            },
            dist: {
                files: {
                    'js/dist/<%= pkg.name %>.min.js': ['<%= concat.js.dest %>']
                }
            }
        },
        cssmin: {
          minify: {
            expand: true,
            cwd: 'css/',
            src: ['*.css'],
            dest: 'css/',
            ext: '.min.css'
          }
        },
        imagemin: {
			png: {
				options: {
					optimizationLevel: 1
				},
				files: [{
					expand: true,
					cwd: '_imgs/',
					src: ['**/*.png'],
					dest: 'images/'
				}]
			},
			jpg: {
				options: {
					progressive: true
				},
				files: [{
					expand: true,
					cwd: '_imgs/',
					src: ['**/*.jpg'],
					dest: 'images/'
				}]
			}
		},
        clean: {
		  js: ["js/dist/*.js"],
		  css: ["css/*.min.css", "css/*.css"]
		},
        connect: {
            options: {
                port: 9000,
                // change this to '0.0.0.0' to access the server from outside
                hostname: 'localhost'
            },
            livereload: {
                options: {
                    middleware: function (connect) {
                        return [
                            mountFolder(connect, './'),
                            lrSnippet
                        ];
                    }
                }
            }
        },
        open: {
            server: {
                path: 'http://localhost:<%= connect.options.port %>'
            }
        }        
    });

    // These plugins provide necessary tasks
    grunt.loadNpmTasks('grunt-contrib-concat');
    grunt.loadNpmTasks('grunt-contrib-uglify');
    grunt.loadNpmTasks('grunt-contrib-less');
    grunt.loadNpmTasks('grunt-contrib-cssmin');
    grunt.loadNpmTasks('grunt-contrib-imagemin');
    grunt.loadNpmTasks('grunt-contrib-clean');
    grunt.loadNpmTasks('grunt-contrib-requirejs');
    grunt.loadNpmTasks('grunt-contrib-watch');
    grunt.loadNpmTasks('grunt-contrib-connect');
    grunt.loadNpmTasks('grunt-open');

    grunt.registerTask('server', function (target) {
        grunt.task.run([
        	'clean:js',
        	'clean:css',
            'less:dist',
            'connect:livereload',
            'concat:js',
            'concat:css',
            'cssmin',
            'uglify',
            'imagemin',
            'open',
            'watch'
        ]);
    });
    grunt.registerTask('build', ['less:dist', 'concat:js', 'concat:css', 'uglify']);
    grunt.registerTask('default', ['less:dist', 'concat:js', 'concat:css',]);
};